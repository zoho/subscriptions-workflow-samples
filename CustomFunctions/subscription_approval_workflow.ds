/*
 
  This is a sample Custom Function written to be used in Workflow automation of Zoho Subscriptions, 
  a recurring billing and subscriptions management software.
  

  Module   - Subscription
	
  Type     - Custom Button
	
  Prequisites:
  
  1) Place your {{connection name}} in "YOUR_CONNECTION_NAME" variables.
  2) Create a dropdown custom field for Invoices. Provide the label as 'Approval Status' and two dropdown values as
     'Awaiting Approval' and 'Approved'.
  3) Configure a custom button for Subscriptions module and paste the code below.
	
  
  * This custom function updates the approval status custom field.
  * It also postpones the billing date for the second billing cycle.
  * It is useful for box type subscription businesses.
  
	
*/

domain = "https://www.zohoapis.com/billing/v1";

organizationID = organization.get("organization_id");
subscriptionID = subscriptions.get("subscription_id");
emailID = subscriptions.get("customer").get("email");
name = subscriptions.get("name");
customFields = subscriptions.get("custom_fields").toJSONList();
cfName = "cf_approval_status";

resultMap = Map();
resultMap.put("code",1);
isCFPresent = 0;

for each  cf in customFields
{
	if(cf.get("api_name").equalsIgnoreCase(cfName))
	{
		isCFPresent = 1;
		if(cf.get("value").equalsIgnoreCase("Approved"))
		{
			resultMap.put("message","Subscription Approved Already");
			return resultMap;
		}
		else if(cf.get("value").equalsIgnoreCase("Awaiting Approval"))
		{
			cf.put("value","Approved");
			cf.put("value_formatted","Approved");
		}
	}
}

if(isCFPresent == 0)
{
	resultMap.put("message","Custom Fields Not Found");
	return resultMap;
}
params = Map();
params.put("custom_fields",customFields);
updateResponse = zoho.billing.update("Subscriptions",organizationID,subscriptionID,params,"YOUR_CONNECTION_NAME");

if(updateResponse.get("code") != 0)
{
	resultMap.put("message","Custom Fields Not Updated: " + updateResponse.get("message"));
	return resultMap;
}

// update to next billing date
currentDate = zoho.currentdate.toString("yyyy-MM-dd");
nextBillingDate = addDay(currentDate,30);
params = Map();
params.put("renewal_at",nextBillingDate.toString("yyyy-MM-dd"));
postponeUrl = domain + "/subscriptions/" + subscriptionID + "/postpone?organization_id=" + organizationID;
response = invokeurl
[
	url :postponeUrl
	type :POST
	parameters:params.toString()
	connection:"YOUR_CONNECTION_NAME"
];

if(updateResponse.get("code") != 0)
{
	resultMap.put("message","Error Occured while updating Next Billing Date: " + updateResponse.get("message"));
	return resultMap;
}

sendmail
[
	from :zoho.adminuserid
	to :emailID
	subject :"Subscription Approved"
	message :"Your subscription has been approved and your first shipment is on its way. Thank you for the business."
];

resultMap.put("code",0);
resultMap.put("message","Subscription name -" + name);
return resultMap;
